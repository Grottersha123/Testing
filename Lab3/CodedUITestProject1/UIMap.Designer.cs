// ------------------------------------------------------------------------------
//  <auto-generated>
//      Этот код был создан построителем кодированных тестов ИП.
//      Версия: 14.0.0.0
//
//      Изменения, внесенные в этот файл, могут привести к неправильной работе кода и будут
//      утрачены при повторном формировании кода.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject1
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1 - Используйте "RecordedMethod1Params" для передачи параметров в этот метод.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinList uIItemList = this.UIItemWindow.UIFolderViewWindow.UIItemList;
            WinEdit uITextBox2Edit = this.UIForm1Window.UITextBox2Window.UITextBox2Edit;
            WinButton uIСтартButton = this.UIForm1Window.UIСтартWindow.UIСтартButton;
            WinEdit uITextBox1Edit = this.UIForm1Window.UITextBox1Window.UITextBox1Edit;
            #endregion

            // Щелкните список
            Mouse.Click(uIItemList, new Point(683, 45));

            // Запуск "%USERPROFILE%\Desktop\Lab3.exe"
            ApplicationUnderTest uIForm1Window = ApplicationUnderTest.Launch(this.RecordedMethod1Params.UIForm1WindowExePath, this.RecordedMethod1Params.UIForm1WindowAlternateExePath);

            // Тип "1234 2341 3453 2343 1232 3453 1007 2931 2097 2005" в "textBox2" надпись
            uITextBox2Edit.Text = this.RecordedMethod1Params.UITextBox2EditText;

            // Щелкните "Старт" кнопка
            Mouse.Click(uIСтартButton, new Point(36, 9));

            // Щелкните "textBox1" надпись
            Mouse.Click(uITextBox1Edit, new Point(116, 19));

            // Перемещение  "textBox2" надпись
            Mouse.StartDragging(uITextBox2Edit, new Point(268, 6));
            Mouse.StopDragging(uITextBox2Edit, -26, -3);
        }
        
        /// <summary>
        /// AssertMethod1 - Используйте "AssertMethod1ExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            WinEdit uITextBox1Edit = this.UIForm1Window.UITextBox1Window.UITextBox1Edit;
            #endregion

            // Убедитесь, что свойство Text "textBox1" надпись равняется "1007"
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UITextBox1EditText, uITextBox1Edit.Text, "Все правильно");
        }
        
        /// <summary>
        /// Закрытие программы
        /// </summary>
        public void Close()
        {
            #region Variable Declarations
            WinButton uIЗакрытьButton = this.UIForm1Window.UIForm1TitleBar.UIЗакрытьButton;
            #endregion

            // Щелкните "Закрыть" кнопка
            Mouse.Click(uIЗакрытьButton, new Point(39, 18));
        }
        
        /// <summary>
        /// Second_Test - Используйте "Second_TestExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void Second_Test()
        {
            #region Variable Declarations
            WinEdit uITextBox1Edit = this.UIForm1Window.UITextBox1Window.UITextBox1Edit;
            #endregion

            // Убедитесь, что свойство Text "textBox1" надпись равняется " 1007 1007"
            Assert.AreEqual(this.Second_TestExpectedValues.UITextBox1EditText, uITextBox1Edit.Text, "Проверка работы второго теста");
        }
        
        /// <summary>
        /// Проверка есть ли у нас такие числа
        /// </summary>
        public void RecordedMethod2()
        {
            #region Variable Declarations
            WinEdit uITextBox2Edit = this.UIForm1Window.UITextBox2Window.UITextBox2Edit;
            WinButton uIСтартButton = this.UIForm1Window.UIСтартWindow.UIСтартButton;
            WinButton uIОКButton = this.UIОКWindow.UIОКButton;
            WinClient uIForm1Client = this.UIForm1Window.UIForm1Client;
            WinButton uIЗакрытьButton = this.UIForm1Window.UIForm1TitleBar.UIЗакрытьButton;
            #endregion

            // Тип "1000 2342 3423 1231 34234 " в "textBox2" надпись
            uITextBox2Edit.Text = this.RecordedMethod2Params.UITextBox2EditText;

            // Щелкните "Старт" кнопка
            Mouse.Click(uIСтартButton, new Point(33, 16));

            // Щелкните "ОК" кнопка
            Mouse.Click(uIОКButton, new Point(74, 10));

            // Тип "1000 2342 3423 1231 3423" в "textBox2" надпись
            uITextBox2Edit.Text = this.RecordedMethod2Params.UITextBox2EditText1;

            // Щелкните "Form1" клиент
            Mouse.Click(uIForm1Client, new Point(482, 172));

            // Щелкните "Старт" кнопка
            Mouse.Click(uIСтартButton, new Point(62, 20));

            // Щелкните "ОК" кнопка
            Mouse.Click(uIОКButton, new Point(63, 18));

            // Щелкните "Закрыть" кнопка
            Mouse.Click(uIЗакрытьButton, new Point(31, 10));
        }
        
        /// <summary>
        /// Проверка есть ли такие числа
        /// </summary>
        public void TEst_3()
        {
            #region Variable Declarations
            WinEdit uITextBox1Edit = this.UIForm1Window.UITextBox1Window.UITextBox1Edit;
            #endregion

            // Убедитесь, что свойство Text "textBox1" надпись равняется ""
            Assert.AreEqual(this.TEst_3ExpectedValues.UITextBox1EditText, uITextBox1Edit.Text, "ПРоверка есть ли числа удолетворяющие всему");
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public virtual Second_TestExpectedValues Second_TestExpectedValues
        {
            get
            {
                if ((this.mSecond_TestExpectedValues == null))
                {
                    this.mSecond_TestExpectedValues = new Second_TestExpectedValues();
                }
                return this.mSecond_TestExpectedValues;
            }
        }
        
        public virtual RecordedMethod2Params RecordedMethod2Params
        {
            get
            {
                if ((this.mRecordedMethod2Params == null))
                {
                    this.mRecordedMethod2Params = new RecordedMethod2Params();
                }
                return this.mRecordedMethod2Params;
            }
        }
        
        public virtual TEst_3ExpectedValues TEst_3ExpectedValues
        {
            get
            {
                if ((this.mTEst_3ExpectedValues == null))
                {
                    this.mTEst_3ExpectedValues = new TEst_3ExpectedValues();
                }
                return this.mTEst_3ExpectedValues;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIForm1Window UIForm1Window
        {
            get
            {
                if ((this.mUIForm1Window == null))
                {
                    this.mUIForm1Window = new UIForm1Window();
                }
                return this.mUIForm1Window;
            }
        }
        
        public UIОКWindow UIОКWindow
        {
            get
            {
                if ((this.mUIОКWindow == null))
                {
                    this.mUIОКWindow = new UIОКWindow();
                }
                return this.mUIОКWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private Second_TestExpectedValues mSecond_TestExpectedValues;
        
        private RecordedMethod2Params mRecordedMethod2Params;
        
        private TEst_3ExpectedValues mTEst_3ExpectedValues;
        
        private UIItemWindow mUIItemWindow;
        
        private UIForm1Window mUIForm1Window;
        
        private UIОКWindow mUIОКWindow;
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "RecordedMethod1"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Запуск "%USERPROFILE%\Desktop\Lab3.exe"
        /// </summary>
        public string UIForm1WindowExePath = "C:\\Users\\Grotter\\Desktop\\Lab3.exe";
        
        /// <summary>
        /// Запуск "%USERPROFILE%\Desktop\Lab3.exe"
        /// </summary>
        public string UIForm1WindowAlternateExePath = "%USERPROFILE%\\Desktop\\Lab3.exe";
        
        /// <summary>
        /// Тип "1234 2341 3453 2343 1232 3453 1007 2931 2097 2005" в "textBox2" надпись
        /// </summary>
        public string UITextBox2EditText = "1234 2341 3453 2343 1232 3453 1007 2931 2097 2005";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "AssertMethod1"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство Text "textBox1" надпись равняется "1007"
        /// </summary>
        public string UITextBox1EditText = "1007";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "Second_Test"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class Second_TestExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство Text "textBox1" надпись равняется " 1007 1007"
        /// </summary>
        public string UITextBox1EditText = " 1007 1007";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "RecordedMethod2"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class RecordedMethod2Params
    {
        
        #region Fields
        /// <summary>
        /// Тип "1000 2342 3423 1231 34234 " в "textBox2" надпись
        /// </summary>
        public string UITextBox2EditText = "1000 2342 3423 1231 34234 ";
        
        /// <summary>
        /// Тип "1000 2342 3423 1231 3423" в "textBox2" надпись
        /// </summary>
        public string UITextBox2EditText1 = "1000 2342 3423 1231 3423";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "TEst_3"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class TEst_3ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство Text "textBox1" надпись равняется ""
        /// </summary>
        public string UITextBox1EditText = "";
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Рабочий стол";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public UIFolderViewWindow UIFolderViewWindow
        {
            get
            {
                if ((this.mUIFolderViewWindow == null))
                {
                    this.mUIFolderViewWindow = new UIFolderViewWindow(this);
                }
                return this.mUIFolderViewWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIFolderViewWindow mUIFolderViewWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class UIFolderViewWindow : WinWindow
    {
        
        public UIFolderViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            #endregion
        }
        
        #region Properties
        public WinList UIItemList
        {
            get
            {
                if ((this.mUIItemList == null))
                {
                    this.mUIItemList = new WinList(this);
                }
                return this.mUIItemList;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUIItemList;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class UIForm1Window : WinWindow
    {
        
        public UIForm1Window()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Form1";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public UITextBox2Window UITextBox2Window
        {
            get
            {
                if ((this.mUITextBox2Window == null))
                {
                    this.mUITextBox2Window = new UITextBox2Window(this);
                }
                return this.mUITextBox2Window;
            }
        }
        
        public UIСтартWindow UIСтартWindow
        {
            get
            {
                if ((this.mUIСтартWindow == null))
                {
                    this.mUIСтартWindow = new UIСтартWindow(this);
                }
                return this.mUIСтартWindow;
            }
        }
        
        public UITextBox1Window UITextBox1Window
        {
            get
            {
                if ((this.mUITextBox1Window == null))
                {
                    this.mUITextBox1Window = new UITextBox1Window(this);
                }
                return this.mUITextBox1Window;
            }
        }
        
        public UIForm1TitleBar UIForm1TitleBar
        {
            get
            {
                if ((this.mUIForm1TitleBar == null))
                {
                    this.mUIForm1TitleBar = new UIForm1TitleBar(this);
                }
                return this.mUIForm1TitleBar;
            }
        }
        
        public WinClient UIForm1Client
        {
            get
            {
                if ((this.mUIForm1Client == null))
                {
                    this.mUIForm1Client = new WinClient(this);
                    #region Условия поиска
                    this.mUIForm1Client.SearchProperties[WinControl.PropertyNames.Name] = "Form1";
                    this.mUIForm1Client.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIForm1Client;
            }
        }
        #endregion
        
        #region Fields
        private UITextBox2Window mUITextBox2Window;
        
        private UIСтартWindow mUIСтартWindow;
        
        private UITextBox1Window mUITextBox1Window;
        
        private UIForm1TitleBar mUIForm1TitleBar;
        
        private WinClient mUIForm1Client;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class UITextBox2Window : WinWindow
    {
        
        public UITextBox2Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox2";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox2Edit
        {
            get
            {
                if ((this.mUITextBox2Edit == null))
                {
                    this.mUITextBox2Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox2Edit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITextBox2Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox2Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class UIСтартWindow : WinWindow
    {
        
        public UIСтартWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button1";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinButton UIСтартButton
        {
            get
            {
                if ((this.mUIСтартButton == null))
                {
                    this.mUIСтартButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIСтартButton.SearchProperties[WinButton.PropertyNames.Name] = "Старт";
                    this.mUIСтартButton.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIСтартButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIСтартButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class UITextBox1Window : WinWindow
    {
        
        public UITextBox1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox1";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox1Edit
        {
            get
            {
                if ((this.mUITextBox1Edit == null))
                {
                    this.mUITextBox1Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox1Edit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITextBox1Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox1Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class UIForm1TitleBar : WinTitleBar
    {
        
        public UIForm1TitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinButton UIЗакрытьButton
        {
            get
            {
                if ((this.mUIЗакрытьButton == null))
                {
                    this.mUIЗакрытьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIЗакрытьButton.SearchProperties[WinButton.PropertyNames.Name] = "Закрыть";
                    this.mUIЗакрытьButton.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIЗакрытьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIЗакрытьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class UIОКWindow : WinWindow
    {
        
        public UIОКWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "ОК";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
            this.WindowTitles.Add("ОК");
            #endregion
        }
        
        #region Properties
        public WinButton UIОКButton
        {
            get
            {
                if ((this.mUIОКButton == null))
                {
                    this.mUIОКButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIОКButton.SearchProperties[WinButton.PropertyNames.Name] = "ОК";
                    this.mUIОКButton.WindowTitles.Add("ОК");
                    #endregion
                }
                return this.mUIОКButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIОКButton;
        #endregion
    }
}
