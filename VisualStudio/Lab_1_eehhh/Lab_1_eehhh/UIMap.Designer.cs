// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Lab_1_eehhh
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1()
        {

            // Launch '%windir%\System32\calc.exe'
            ApplicationUnderTest calcApplication = ApplicationUnderTest.Launch(this.RecordedMethod1Params.ExePath, this.RecordedMethod1Params.AlternateExePath);
        }
        
        /// <summary>
        /// RecordedMethod2 - Use 'RecordedMethod2Params' to pass parameters into this method.
        /// </summary>
       
        /// <summary>
        /// AssertMethod1 - Use 'AssertMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            WinText uIItem0Text = this.UIКалькуляторWindow.UIItem0Window.UIItem0Text;
            #endregion

            // Verify that the 'DisplayText' property of '0' label equals '5'
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UIItem0TextDisplayText, uIItem0Text.DisplayText);

            // Verify that the 'DisplayText' property of '0' label equals '5'
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UIItem0TextDisplayText1, uIItem0Text.DisplayText);
        }
        
        /// <summary>
        /// mul - Use 'mulParams' to pass parameters into this method.
        /// </summary>
        public void mul()
        {
            #region Variable Declarations
            WinText uIItem0Text = this.UIКалькуляторWindow.UIItem0Window.UIItem0Text;
            #endregion

            // Type '{Multiply}25{Enter}' in '0' label
            Keyboard.SendKeys(uIItem0Text, this.mulParams.UIItem0TextSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// AssertMethod2 - Use 'AssertMethod2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod2()
        {
            #region Variable Declarations
            WinText uIItem0Text = this.UIКалькуляторWindow.UIItem0Window.UIItem0Text;
            #endregion

            // Verify that the 'DisplayText' property of '0' label equals '125'
            Assert.AreEqual(this.AssertMethod2ExpectedValues.UIItem0TextDisplayText, uIItem0Text.DisplayText);
        }
        
        /// <summary>
        /// CloseClear - Use 'CloseClearParams' to pass parameters into this method.
        /// </summary>
        public void CloseClear()
        {
            #region Variable Declarations
            WinTitleBar uIКалькуляторTitleBar = this.UIКалькуляторWindow.UIКалькуляторTitleBar;
            WinText uIItem0Text = this.UIКалькуляторWindow.UIItem0Window.UIItem0Text;
            WinButton uIЗакрытьButton = this.UIКалькуляторWindow.UIКалькуляторTitleBar.UIЗакрытьButton;
            #endregion

            // Click 'Калькулятор' title bar
            Mouse.Click(uIКалькуляторTitleBar, new Point(70, 18));

            // Type '{Escape}' in '0' label
            Keyboard.SendKeys(uIItem0Text, this.CloseClearParams.UIItem0TextSendKeys, ModifierKeys.None);

            // Click 'Закрыть' button
            Mouse.Click(uIЗакрытьButton, new Point(18, 4));
        }
        
        /// <summary>
        /// DivCal
        /// </summary>
        public void DivCal()
        {
            #region Variable Declarations
            WinButton uIItem2Button = this.UIКалькуляторWindow.UIItemWindow.UIItem2Button;
            WinButton uIItem5Button = this.UIКалькуляторWindow.UIItemWindow1.UIItem5Button;
            WinButton uIДелениеButton = this.UIКалькуляторWindow.UIItemWindow2.UIДелениеButton;
            WinButton uIРавноButton = this.UIКалькуляторWindow.UIItemWindow3.UIРавноButton;
            #endregion

            // Click '2' button
            Mouse.Click(uIItem2Button, new Point(32, 14));

            // Click '5' button
            Mouse.Click(uIItem5Button, new Point(31, 24));

            // Click 'Деление' button
            Mouse.Click(uIДелениеButton, new Point(25, 19));

            // Click '5' button
            Mouse.Click(uIItem5Button, new Point(25, 21));

            // Click 'Равно' button
            Mouse.Click(uIРавноButton, new Point(19, 46));
        }
        
        /// <summary>
        /// CalcMul
        /// </summary>
       
        /// <summary>
        /// RecordedMethod3
        /// </summary>
        public void RecordedMethod3()
        {
            #region Variable Declarations
            WinButton uIУмножениеButton = this.UIКалькуляторWindow.UIItemWindow31.UIУмножениеButton;
            WinButton uIItem2Button = this.UIКалькуляторWindow.UIItemWindow.UIItem2Button;
            WinButton uIItem5Button = this.UIКалькуляторWindow.UIItemWindow1.UIItem5Button;
            WinClient uIКалькуляторClient = this.UIКалькуляторWindow.UIItemWindow32.UIКалькуляторClient;
            WinButton uIРавноButton = this.UIКалькуляторWindow.UIItemWindow3.UIРавноButton;
            #endregion

            // Click 'Умножение' button
            Mouse.Click(uIУмножениеButton, new Point(19, 21));

            // Click '2' button
            Mouse.Click(uIItem2Button, new Point(37, 13));

            // Click '5' button
            Mouse.Click(uIItem5Button, new Point(27, 0));

            // Click 'Калькулятор' client
            Mouse.Click(uIКалькуляторClient, new Point(252, 292));

            // Click 'Равно' button
            Mouse.Click(uIРавноButton, new Point(36, 50));
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public virtual RecordedMethod2Params RecordedMethod2Params
        {
            get
            {
                if ((this.mRecordedMethod2Params == null))
                {
                    this.mRecordedMethod2Params = new RecordedMethod2Params();
                }
                return this.mRecordedMethod2Params;
            }
        }
        
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public virtual mulParams mulParams
        {
            get
            {
                if ((this.mmulParams == null))
                {
                    this.mmulParams = new mulParams();
                }
                return this.mmulParams;
            }
        }
        
        public virtual AssertMethod2ExpectedValues AssertMethod2ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod2ExpectedValues == null))
                {
                    this.mAssertMethod2ExpectedValues = new AssertMethod2ExpectedValues();
                }
                return this.mAssertMethod2ExpectedValues;
            }
        }
        
        public virtual CloseClearParams CloseClearParams
        {
            get
            {
                if ((this.mCloseClearParams == null))
                {
                    this.mCloseClearParams = new CloseClearParams();
                }
                return this.mCloseClearParams;
            }
        }
        
        public UIКалькуляторWindow UIКалькуляторWindow
        {
            get
            {
                if ((this.mUIКалькуляторWindow == null))
                {
                    this.mUIКалькуляторWindow = new UIКалькуляторWindow();
                }
                return this.mUIКалькуляторWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private RecordedMethod2Params mRecordedMethod2Params;
        
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private mulParams mmulParams;
        
        private AssertMethod2ExpectedValues mAssertMethod2ExpectedValues;
        
        private CloseClearParams mCloseClearParams;
        
        private UIКалькуляторWindow mUIКалькуляторWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Launch '%windir%\System32\calc.exe'
        /// </summary>
        public string ExePath = "C:\\WINDOWS\\System32\\calc.exe";
        
        /// <summary>
        /// Launch '%windir%\System32\calc.exe'
        /// </summary>
        public string AlternateExePath = "%windir%\\System32\\calc.exe";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class RecordedMethod2Params
    {
        
        #region Fields
        /// <summary>
        /// Type '25{Divide}5{Enter}' in '0' label
        /// </summary>
        public string UIItem0TextSendKeys = "25{Divide}5{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of '0' label equals '5'
        /// </summary>
        public string UIItem0TextDisplayText = "5";
        
        /// <summary>
        /// Verify that the 'DisplayText' property of '0' label equals '5'
        /// </summary>
        public string UIItem0TextDisplayText1 = "5";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'mul'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class mulParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{Multiply}25{Enter}' in '0' label
        /// </summary>
        public string UIItem0TextSendKeys = "{Multiply}25{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class AssertMethod2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of '0' label equals '125'
        /// </summary>
        public string UIItem0TextDisplayText = "125";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CloseClear'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class CloseClearParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{Escape}' in '0' label
        /// </summary>
        public string UIItem0TextSendKeys = "{Escape}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIКалькуляторWindow : WinWindow
    {
        
        public UIКалькуляторWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Калькулятор";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CalcFrame";
            this.WindowTitles.Add("Калькулятор");
            #endregion
        }
        
        #region Properties
        public UIКалькуляторTitleBar UIКалькуляторTitleBar
        {
            get
            {
                if ((this.mUIКалькуляторTitleBar == null))
                {
                    this.mUIКалькуляторTitleBar = new UIКалькуляторTitleBar(this);
                }
                return this.mUIКалькуляторTitleBar;
            }
        }
        
        public UIItem0Window UIItem0Window
        {
            get
            {
                if ((this.mUIItem0Window == null))
                {
                    this.mUIItem0Window = new UIItem0Window(this);
                }
                return this.mUIItem0Window;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow3 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow3(this);
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIItemWindow4 UIItemWindow4
        {
            get
            {
                if ((this.mUIItemWindow4 == null))
                {
                    this.mUIItemWindow4 = new UIItemWindow4(this);
                }
                return this.mUIItemWindow4;
            }
        }
        
        public UIItemWindow31 UIItemWindow31
        {
            get
            {
                if ((this.mUIItemWindow31 == null))
                {
                    this.mUIItemWindow31 = new UIItemWindow31(this);
                }
                return this.mUIItemWindow31;
            }
        }
        
        public UIItemWindow32 UIItemWindow32
        {
            get
            {
                if ((this.mUIItemWindow32 == null))
                {
                    this.mUIItemWindow32 = new UIItemWindow32(this);
                }
                return this.mUIItemWindow32;
            }
        }
        #endregion
        
        #region Fields
        private UIКалькуляторTitleBar mUIКалькуляторTitleBar;
        
        private UIItem0Window mUIItem0Window;
        
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIItemWindow2 mUIItemWindow2;
        
        private UIItemWindow3 mUIItemWindow3;
        
        private UIItemWindow4 mUIItemWindow4;
        
        private UIItemWindow31 mUIItemWindow31;
        
        private UIItemWindow32 mUIItemWindow32;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIКалькуляторTitleBar : WinTitleBar
    {
        
        public UIКалькуляторTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Калькулятор");
            #endregion
        }
        
        #region Properties
        public WinButton UIЗакрытьButton
        {
            get
            {
                if ((this.mUIЗакрытьButton == null))
                {
                    this.mUIЗакрытьButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIЗакрытьButton.SearchProperties[WinButton.PropertyNames.Name] = "Закрыть";
                    this.mUIЗакрытьButton.WindowTitles.Add("Калькулятор");
                    #endregion
                }
                return this.mUIЗакрытьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIЗакрытьButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItem0Window : WinWindow
    {
        
        public UIItem0Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "150";
            this.WindowTitles.Add("Калькулятор");
            #endregion
        }
        
        #region Properties
        public WinText UIItem0Text
        {
            get
            {
                if ((this.mUIItem0Text == null))
                {
                    this.mUIItem0Text = new WinText(this);
                    #region Search Criteria
                    this.mUIItem0Text.SearchProperties[WinText.PropertyNames.Name] = "Результат";
                    this.mUIItem0Text.WindowTitles.Add("Калькулятор");
                    #endregion
                }
                return this.mUIItem0Text;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIItem0Text;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "132";
            this.WindowTitles.Add("Калькулятор");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem2Button
        {
            get
            {
                if ((this.mUIItem2Button == null))
                {
                    this.mUIItem2Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem2Button.SearchProperties[WinButton.PropertyNames.Name] = "2";
                    this.mUIItem2Button.WindowTitles.Add("Калькулятор");
                    #endregion
                }
                return this.mUIItem2Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem2Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "135";
            this.WindowTitles.Add("Калькулятор");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem5Button
        {
            get
            {
                if ((this.mUIItem5Button == null))
                {
                    this.mUIItem5Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem5Button.SearchProperties[WinButton.PropertyNames.Name] = "5";
                    this.mUIItem5Button.WindowTitles.Add("Калькулятор");
                    #endregion
                }
                return this.mUIItem5Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem5Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "91";
            this.WindowTitles.Add("Калькулятор");
            #endregion
        }
        
        #region Properties
        public WinButton UIДелениеButton
        {
            get
            {
                if ((this.mUIДелениеButton == null))
                {
                    this.mUIДелениеButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIДелениеButton.SearchProperties[WinButton.PropertyNames.Name] = "Деление";
                    this.mUIДелениеButton.WindowTitles.Add("Калькулятор");
                    #endregion
                }
                return this.mUIДелениеButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIДелениеButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "121";
            this.WindowTitles.Add("Калькулятор");
            #endregion
        }
        
        #region Properties
        public WinButton UIРавноButton
        {
            get
            {
                if ((this.mUIРавноButton == null))
                {
                    this.mUIРавноButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIРавноButton.SearchProperties[WinButton.PropertyNames.Name] = "Равно";
                    this.mUIРавноButton.WindowTitles.Add("Калькулятор");
                    #endregion
                }
                return this.mUIРавноButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIРавноButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow4 : WinWindow
    {
        
        public UIItemWindow4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Калькулятор");
            #endregion
        }
        
        #region Properties
        public UIItemDialog UIItemDialog
        {
            get
            {
                if ((this.mUIItemDialog == null))
                {
                    this.mUIItemDialog = new UIItemDialog(this);
                }
                return this.mUIItemDialog;
            }
        }
        #endregion
        
        #region Fields
        private UIItemDialog mUIItemDialog;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemDialog : WinControl
    {
        
        public UIItemDialog(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Dialog";
            this.WindowTitles.Add("Калькулятор");
            #endregion
        }
        
        #region Properties
        public WinWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIItemWindow.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "2";
                    this.mUIItemWindow.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
                    this.mUIItemWindow.WindowTitles.Add("Калькулятор");
                    #endregion
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow31 : WinWindow
    {
        
        public UIItemWindow31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "92";
            this.WindowTitles.Add("Калькулятор");
            #endregion
        }
        
        #region Properties
        public WinButton UIУмножениеButton
        {
            get
            {
                if ((this.mUIУмножениеButton == null))
                {
                    this.mUIУмножениеButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIУмножениеButton.SearchProperties[WinButton.PropertyNames.Name] = "Умножение";
                    this.mUIУмножениеButton.WindowTitles.Add("Калькулятор");
                    #endregion
                }
                return this.mUIУмножениеButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIУмножениеButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow32 : WinWindow
    {
        
        public UIItemWindow32(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CalcFrame";
            this.WindowTitles.Add("Калькулятор");
            #endregion
        }
        
        #region Properties
        public WinClient UIКалькуляторClient
        {
            get
            {
                if ((this.mUIКалькуляторClient == null))
                {
                    this.mUIКалькуляторClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIКалькуляторClient.WindowTitles.Add("Калькулятор");
                    #endregion
                }
                return this.mUIКалькуляторClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIКалькуляторClient;
        #endregion
    }
}
